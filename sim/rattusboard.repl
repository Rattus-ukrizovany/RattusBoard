// RattusBoard Platform Description for Renode
// Copyright 2024 RattusBoard Project
// SPDX-License-Identifier: GPL-3.0-or-later
//
// Platform description for RP2040-based RattusBoard split keyboard
// Matches hardware configuration from config.h, HALVES_WIRING.md, and wiring_diagram.txt

// Use RP2040 base platform - Raspberry Pi Pico compatible
// Note: Using standard ARM Cortex-M0+ with RP2040-compatible peripherals

// CPU and core system
cpu: CPU.CortexM @ sysbus
    cpuType: "cortex-m0+"

// Memory regions matching RP2040 layout
flash: Memory.MappedMemory @ sysbus 0x10000000
    size: 0x1000000  // 16MB external flash

sram: Memory.MappedMemory @ sysbus 0x20000000  
    size: 0x42000   // 264KB SRAM (256KB + 8KB for USB)

bootrom: Memory.MappedMemory @ sysbus 0x00000000
    size: 0x4000    // 16KB bootrom

// Interrupt controller
nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    systickFrequency: 125000000
    IRQ -> cpu@0

// GPIO controller - using standard GPIO implementation
gpio: GPIOPort.STM32_GPIOPort @ sysbus 0x40014000
    numberOfAFs: 10
    [0-29] -> nvic@[13-15]

// SPI Controllers for PMW3360 trackball sensor
spi0: SPI.STM32SPI @ sysbus 0x4003c000
    -> nvic@18

// UART for split keyboard communication  
uart0: UART.PL011 @ sysbus 0x40034000
    -> nvic@20

uart1: UART.PL011 @ sysbus 0x40038000
    -> nvic@21

// Timer peripheral
timer: Timers.STM32_Timer @ sysbus 0x40054000
    frequency: 125000000
    -> nvic@0

// I2C controllers (for potential OLED displays)
i2c0: I2C.STM32F4I2C @ sysbus 0x40044000
    -> nvic@23

i2c1: I2C.STM32F4I2C @ sysbus 0x40048000  
    -> nvic@24

// USB controller for master half connection
usb: USB.STM32F4USB @ sysbus 0x50100000
    -> nvic@5

// ===== RATTUSBOARD SPECIFIC GPIO MAPPING =====

// Matrix Row Pins (both halves) - GP2, GP3, GP4, GP5
matrix_row0: Miscellaneous.Button @ gpio 2
    -> gpio@2

matrix_row1: Miscellaneous.Button @ gpio 3  
    -> gpio@3

matrix_row2: Miscellaneous.Button @ gpio 4
    -> gpio@4

matrix_row3: Miscellaneous.Button @ gpio 5
    -> gpio@5

// Matrix Column Pins - CORRECTED to match unified config.h
// Config.h defines: MATRIX_COL_PINS { GP15, GP16, GP17, GP18, GP19, GP20 }
// NEW UNIFIED DESIGN - Both halves use same pins:
// Both halves: GP15, GP16, GP17, GP18, GP19, GP20 (unified column pins)
// Each half only has its own physical pins populated

// Left Half Matrix Column Pins (mapped to GP15-GP20 as per unified config.h)
left_col0: Miscellaneous.Button @ gpio 15
    -> gpio@15

left_col1: Miscellaneous.Button @ gpio 16
    -> gpio@16

left_col2: Miscellaneous.Button @ gpio 17
    -> gpio@17

left_col3: Miscellaneous.Button @ gpio 18
    -> gpio@18

left_col4: Miscellaneous.Button @ gpio 19
    -> gpio@19

left_col5: Miscellaneous.Button @ gpio 20
    -> gpio@20

// Right Half Matrix Column Pins - Same pins as left (unified design)
// Both halves use identical pin assignments: GP15-GP20
right_col0: Miscellaneous.Button @ gpio 15
    -> gpio@15

right_col1: Miscellaneous.Button @ gpio 16
    -> gpio@16

right_col2: Miscellaneous.Button @ gpio 17
    -> gpio@17

right_col3: Miscellaneous.Button @ gpio 18
    -> gpio@18

right_col4: Miscellaneous.Button @ gpio 19
    -> gpio@19

right_col5: Miscellaneous.Button @ gpio 20
    -> gpio@20

// Split Communication - GP1 (SOFT_SERIAL_PIN)
split_serial: Miscellaneous.Button @ gpio 1
    -> gpio@1

// Split Hand Detection - GP21 (SPLIT_HAND_PIN)
// Left: GP21 -> GND (low), Right: GP21 -> Float (high)
hand_detect: Miscellaneous.Button @ gpio 21
    -> gpio@21

// PMW3360 Trackball SPI Interface (Right Half Only)
// CS - GP22, SCK - GP23, MOSI - GP24, MISO - GP25
// Using a generic SPI peripheral device to represent the PMW3360
pmw3360_device: SPI.GenericSPIPeripheral @ spi0 0
    transmitDelay: 1000

pmw3360_cs: Miscellaneous.Button @ gpio 22
    -> gpio@22

// SPI pins connected to PMW3360
spi0_sck: Miscellaneous.Button @ gpio 23
    -> gpio@23

spi0_mosi: Miscellaneous.Button @ gpio 24
    -> gpio@24

spi0_miso: Miscellaneous.Button @ gpio 25
    -> gpio@25

// Rotary Encoder (Right Half Only) - GP26, GP27
encoder_a: Miscellaneous.Button @ gpio 26
    -> gpio@26

encoder_b: Miscellaneous.Button @ gpio 27
    -> gpio@27

// Status LED and Bootloader Reset - GP28
status_led: Miscellaneous.LED @ gpio 28
    -> gpio@28

// Optional motion interrupt from PMW3360 - GP29 
motion_interrupt: Miscellaneous.Button @ gpio 29
    -> gpio@29

// Additional peripherals for completeness
watchdog: Miscellaneous.DummyPeripheral @ sysbus 0x40058000

pll_sys: Miscellaneous.DummyPeripheral @ sysbus 0x40028000
pll_usb: Miscellaneous.DummyPeripheral @ sysbus 0x4002c000

clocks: Miscellaneous.DummyPeripheral @ sysbus 0x40008000

xosc: Miscellaneous.DummyPeripheral @ sysbus 0x40024000

rosc: Miscellaneous.DummyPeripheral @ sysbus 0x40060000

// ===== GPIO PIN FUNCTION MAPPING =====
// This section documents the pin assignments for reference
//
// Matrix (both halves - unified design):
//   Rows: GP2, GP3, GP4, GP5
//   
// Both Halves Columns: GP15, GP16, GP17, GP18, GP19, GP20 (unified pins)
// Each half only has its own physical pins populated
//
// Communication:
//   Split Serial: GP1
//   Hand Detection: GP21 (Low=Left, Float=Right)
//
// PMW3360 Trackball (Right Half):
//   CS: GP22, SCK: GP23, MOSI: GP24, MISO: GP25
//   Motion IRQ: GP29 (optional)
//
// Rotary Encoder (Right Half):
//   A Phase: GP26, B Phase: GP27
//
// Status/Control:
//   Bootloader LED: GP28